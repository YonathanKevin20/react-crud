{"version":3,"sources":["logo.svg","tables/UserTable.js","forms/AddUserForm.js","forms/EditUserForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","UserTable","props","react_default","a","createElement","users","length","map","user","key","id","name","username","onClick","editRow","className","deleteUser","colSpan","AddUserForm","initialFormState","_useState","useState","_useState2","Object","slicedToArray","setUser","handleInputChange","event","_event$target","target","value","objectSpread","defineProperty","onSubmit","preventDefault","addUser","type","onChange","EditUserForm","currentUser","useEffect","updateUser","setEditing","App","setUsers","_useState3","_useState4","editing","_useState5","_useState6","setCurrentUser","src","logo","alt","forms_EditUserForm","updatedUser","forms_AddUserForm","concat","toConsumableArray","tables_UserTable","filter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cefcf3f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\nconst UserTable = props => (\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Username</th>\r\n        <th>Action</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {props.users.length > 0 ? (\r\n        props.users.map(user => (\r\n          <tr key={user.id}>\r\n            <td>{user.name}</td>\r\n            <td>{user.username}</td>\r\n            <td>\r\n              <button\r\n                onClick={() => {\r\n                  props.editRow(user)\r\n                }}\r\n                className=\"button muted-button\">Edit\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                className=\"button muted-button\"\r\n                onClick={() => props.deleteUser(user.id)}>Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))\r\n      ) : (\r\n        <tr>\r\n          <td colSpan={3}>No users</td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  </table>\r\n)\r\n\r\nexport default UserTable","import React, { useState } from 'react'\r\n\r\nconst AddUserForm = props => {\r\n  const initialFormState = {\r\n    id: null, name: '', username: ''\r\n  }\r\n\r\n  const [user, setUser] = useState(initialFormState)\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target\r\n\r\n    setUser({ ...user, [name]: value })\r\n  }\r\n\r\n  return (\r\n    <form\r\n      onSubmit={event => {\r\n        event.preventDefault()\r\n        if(!user.name || !user.username) return\r\n        \r\n        props.addUser(user)\r\n        setUser(initialFormState)\r\n      }}\r\n    >\r\n      <label>Name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={user.name}\r\n        onChange={handleInputChange} />\r\n      <label>Username</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"username\"\r\n        value={user.username}\r\n        onChange={handleInputChange} />\r\n      <button>Add new user</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddUserForm","import React, { useState, useEffect } from 'react'\r\n\r\nconst EditUserForm = props => {\r\n  const [user, setUser] = useState(props.currentUser)\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target\r\n\r\n    setUser({ ...user, [name]: value })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setUser(props.currentUser)\r\n  }, [props])\r\n\r\n  return (\r\n    <form\r\n      onSubmit={event => {\r\n        event.preventDefault()\r\n\r\n        props.updateUser(user.id, user)\r\n      }}\r\n    >\r\n      <label>Name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={user.name}\r\n        onChange={handleInputChange} />\r\n      <label>Username</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"username\"\r\n        value={user.username}\r\n        onChange={handleInputChange} />\r\n      <button>Update user</button>\r\n      &nbsp;\r\n      <button onClick={() => props.setEditing(false)} className=\"button muted-button\">\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default EditUserForm","import React, { useState } from 'react'\nimport logo from './logo.svg'\nimport UserTable from './tables/UserTable'\nimport AddUserForm from './forms/AddUserForm'\nimport EditUserForm from './forms/EditUserForm'\nimport './App.css'\n\nconst App = () => {\n  const usersData = [\n    { id: 1, name: 'Tania', username: 'floppydiskette' },\n    { id: 2, name: 'Craig', username: 'siliconeidolon' },\n    { id: 3, name: 'Ben', username: 'benisphere' },\n  ]\n\n  const initialFormState = {\n    id: null, name: '', username: ''\n  }\n\n  const [users, setUsers] = useState(usersData)\n\n  const [editing, setEditing] = useState(false)\n  const [currentUser, setCurrentUser] = useState(initialFormState)\n\n  const addUser = user => {\n    user.id = users.length + 1\n    setUsers([...users, user])\n  }\n\n  const editRow = user => {\n    setEditing(true)\n\n    setCurrentUser({\n      id: user.id,\n      name: user.name,\n      username: user.username\n    })\n  }\n\n  const updateUser = (id, updatedUser) => {\n    setEditing(false)\n\n    setUsers(users.map(user => (user.id === id ? updatedUser : user)))\n  }\n\n  const deleteUser = id => {\n    setEditing(false)\n\n    setUsers(users.filter(user => user.id !== id))\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n      </div>\n      <h1>CRUD App with Hooks</h1>\n      <div className=\"flex-row\">\n        <div className=\"flex-large\">\n          {editing ? (\n            <div>\n              <h2>Edit user</h2>\n              <EditUserForm\n                editing={editing}\n                setEditing={setEditing}\n                currentUser={currentUser}\n                updateUser={updateUser}\n              />\n            </div>\n          ) : (\n            <div>\n              <h2>Add user</h2>\n              <AddUserForm addUser={addUser} />\n            </div>\n          )}\n        </div>\n        <div className=\"flex-large\">\n          <h2>View users</h2>\n          <UserTable\n            users={users}\n            editRow={editRow}\n            deleteUser={deleteUser} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}